//====================================================
// GMF Map changes:
// Create Java feature initializers to automatically
// instantiate all pins within each part when the part
// is first created
//====================================================
var nodeMappings = GmfMap!NodeMapping.all;
//
var partClass = EClass.all.selectOne(c|c.name = 'Part');
var parts = EClass.all.select(p|p.eSuperTypes.includes(partClass));
for(part:EClass in parts) {
	var nodeMapping = GmfMap!NodeMapping.all.selectOne(nm|nm.domainMetaElement = part);
	if(nodeMapping.domainInitializer.isUndefined()) {
		var domainInit = new GmfMap!FeatureSeqInitializer;
		nodeMapping.domainInitializer = domainInit;
	}
	var pins = part.eAllStructuralFeatures.selectOne(f|f.name='pins');
	var init = createJavaInitializer(
		pins, 'return circuit.ext.PartInitializer.getInstance().initializePins(self);');
	nodeMapping.domainInitializer.initializers.add(init);
	//
	var ports = part.eAllStructuralFeatures.selectOne(f|f.name='ports');
	init = createJavaInitializer(
		ports, 'return circuit.ext.PartInitializer.getInstance().initializePorts(self);');
	nodeMapping.domainInitializer.initializers.add(init);
}

//====================================================
// GMF Graph changes:
// Adjust pins' preferred size
//====================================================
var pinRect = GmfGraph!RoundedRectangle.all.selectOne(r|r.name='PinFigure');
var preferredSize = new GmfGraph!Dimension;
preferredSize.dx = 100;
preferredSize.dy = 30;
pinRect.preferredSize = preferredSize; 

//====================================================
// Convenience operation to create
// a Java initializer (for GmfMap features)
//====================================================
operation createJavaInitializer(feature, body) {
	var value = new GmfMap!ValueExpression;
	value.language = GmfMap!Language#java;
	value.body = body;
	var init = new GmfMap!FeatureValueSpec;
	init.feature = feature;
	init.value = value;
	return init;
}